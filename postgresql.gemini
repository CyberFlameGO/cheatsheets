# PostgreSQL Cheatsheet

## Installation in FreeBSD Jail

```
ezjail create postgres 'lo0|192.168.0.10'
ezjail console -f postgres
pkg update
pkg install postgresql10-server
sysrc postgresql_enable="YES"
exit
echo 'export jail_postgres_parameters="allow.sysvipc=1"' >> /usr/local/etc/ezjail/postgres
ezjail-admin restart postgres
service postgresql initdb
service postgresql start
su postgres
createuser root
createdb test_db
exit
```

## Basic Commands

```table
+--------------+------------------------------------+
|   Command    |               Action               |
+==============+====================================+
| \l           | List all databases                 |
+--------------+------------------------------------+
| \c dbname    | Connect to a database              |
+--------------+------------------------------------+
| \dt          | View list of relations/tables      |
+--------------+------------------------------------+
| \d tablename | Describe the details of a table    |
+--------------+------------------------------------+
| \h           | Get help on syntax of SQL commands |
+--------------+------------------------------------+
| \?           | Lists all slash commands           |
+--------------+------------------------------------+
| \set         | System variables list              |
+--------------+------------------------------------+
| \q           | Quit                               |
+----------------+------------------------------------+
```

## Basic Command-Line Operations

### Create New Database

```
createdb dbname
```

### Remove Database

```
dropdb dbname
```

## Create Database

```
CREATE DATABASE dbname;
```

## Create Table

With auto numbering integer id.

```
CREATE TABLE tablename (
    id serial PRIMARY KEY,
    name varchar(50) UNIQUE NOT NULL,
    dateCreated timestamp DEFAULT current_timestamp
);
```

## Add a Primary Key

```
ALTER TABLE tableName ADD PRIMARY KEY (id);
```

## Create an Index

```
CREATE UNIQUE INDEX indexName ON tableName (columnNames);
```

## Backup a Database

```
pg_dump dbName > dbName.sql
```

## Backup all Databases

```
pg_dumpall > pgbackup.sql
```

## Run SQL Script

```
psql -f script.sql databasename
```

## Search Using a Regular Expression

```
SELECT column FROM table WHERE column ~ 'foo.*';
```

## The First n Records

```
SELECT columns FROM table LIMIT 10;
```

## Pagination

```
SELECT cols FROM table LIMIT 10 OFFSET 30;
```

## Prepared Statements

```
PREPARE preparedInsert (int, varchar) AS
    INSERT INTO tableName (intColumn, charColumn) VALUES ($1, $2);
EXECUTE preparedInsert (1,'a');
EXECUTE preparedInsert (2,'b');
DEALLOCATE preparedInsert;
```

## Create a Function

```
CREATE OR REPLACE FUNCTION month (timestamp) RETURNS integer
    AS 'SELECT date_part(''month'', $1)::integer;'
    LANGUAGE 'sql';
```

## Table Maintenance

```
VACUUM ANALYZE table;
```

## Reindex a Database, Table or Index

```
REINDEX DATABASE dbName;
```

## Show query plan

```
EXPLAIN SELECT * FROM table;
```

## Import from a File

```
COPY destTable FROM '/tmp/somefile';
```

## Show all Runtime Parameters

```
SHOW ALL;
```

## Grant all Permissions to a User

```
GRANT ALL PRIVILEGES ON table TO username;
```

## Perform a Transaction

```
BEGIN TRANSACTION
UPDATE accounts SET balance += 50 WHERE id = 1;
COMMIT;
```

## Get all Columns and Rows from a Table

```
SELECT * FROM table;
```

## Add a new row

```
INSERT INTO table (column1,column2)
VALUES (1, 'one');
```

## Update a row

```
UPDATE table SET foo = 'bar' WHERE id = 1;
```

## Delete a row

```
DELETE FROM table WHERE id = 1;
```

## Client Application Usage

=> https://www.postgresql.org/docs/current/static/app-psql.html
